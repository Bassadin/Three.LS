{
  "version": 3,
  "sources": ["/home/runner/work/Three.LS/Three.LS/src/Utils.ts"],
  "sourcesContent": ["import { BufferGeometry, Float32BufferAttribute, Mesh, MeshBasicMaterial } from 'three';\n\nexport class Utils {\n    static DegreesToRadians(degrees: number): number {\n        const pi: number = Math.PI;\n        return degrees * (pi / 180);\n    }\n\n    static RandomNumber(min: number, max: number): number {\n        return Math.random() * (+max - +min) + +min;\n    }\n\n    static createPlane(): THREE.Mesh {\n        const bufferGeometry: THREE.BufferGeometry = new BufferGeometry();\n        const newColors = [Math.random() * 0.7 + 0.3, Math.random() * 0.7 + 0.3, Math.random() * 0.7 + 0.3];\n        const vertices: any[] = [];\n        const tris: number[] = [];\n        vertices[0] = [-5, -5, 2.5];\n        vertices[1] = [5, -5, 2.5];\n        vertices[2] = [5, -5, -2.5];\n        vertices[3] = [-5, -5, -2.5];\n        tris.push(...[...vertices[0], ...vertices[1], ...vertices[2], ...vertices[0], ...vertices[2], ...vertices[3]]);\n        const colorsArray: number[] = [\n            ...newColors,\n            ...newColors,\n            ...newColors,\n            ...newColors,\n            ...newColors,\n            ...newColors,\n        ];\n        bufferGeometry.setAttribute('position', new Float32BufferAttribute(tris, 3));\n\n        bufferGeometry.setAttribute('color', new Float32BufferAttribute(colorsArray, 3));\n\n        const material = new MeshBasicMaterial({\n            vertexColors: true,\n        });\n\n        const mesh = new Mesh(bufferGeometry, material);\n        return mesh;\n    }\n}\n"],
  "mappings": "AAAA;AAEO,mBAAY;AAAA,SACR,iBAAiB,SAAyB;AAC7C,UAAM,KAAa,KAAK;AACxB,WAAO,UAAW,MAAK;AAAA;AAAA,SAGpB,aAAa,KAAa,KAAqB;AAClD,WAAO,KAAK,WAAY,EAAC,MAAM,CAAC,OAAO,CAAC;AAAA;AAAA,SAGrC,cAA0B;AAC7B,UAAM,iBAAuC,IAAI;AACjD,UAAM,YAAY,CAAC,KAAK,WAAW,MAAM,KAAK,KAAK,WAAW,MAAM,KAAK,KAAK,WAAW,MAAM;AAC/F,UAAM,WAAkB;AACxB,UAAM,OAAiB;AACvB,aAAS,KAAK,CAAC,IAAI,IAAI;AACvB,aAAS,KAAK,CAAC,GAAG,IAAI;AACtB,aAAS,KAAK,CAAC,GAAG,IAAI;AACtB,aAAS,KAAK,CAAC,IAAI,IAAI;AACvB,SAAK,KAAK,GAAG,CAAC,GAAG,SAAS,IAAI,GAAG,SAAS,IAAI,GAAG,SAAS,IAAI,GAAG,SAAS,IAAI,GAAG,SAAS,IAAI,GAAG,SAAS;AAC1G,UAAM,cAAwB;AAAA,MAC1B,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA,MACH,GAAG;AAAA;AAEP,mBAAe,aAAa,YAAY,IAAI,uBAAuB,MAAM;AAEzE,mBAAe,aAAa,SAAS,IAAI,uBAAuB,aAAa;AAE7E,UAAM,WAAW,IAAI,kBAAkB;AAAA,MACnC,cAAc;AAAA;AAGlB,UAAM,OAAO,IAAI,KAAK,gBAAgB;AACtC,WAAO;AAAA;AAAA;",
  "names": []
}
