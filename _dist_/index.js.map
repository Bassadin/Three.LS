{
  "version": 3,
  "sources": ["/home/runner/work/Three.LS/Three.LS/src/index.ts"],
  "sourcesContent": ["import * as THREE from 'three';\nimport { Scene } from 'three';\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls.js';\nimport { Turtle3D } from './Turtles/Turtle3D';\nimport { LindenmayerFormular } from './LindenmayerFormular';\nimport PerformanceStats from './PerformanceStats';\nimport { ARButton } from 'three/examples/jsm/webxr/ARButton.js';\n\nexport let scene: Scene;\nlet camera: THREE.PerspectiveCamera;\nlet renderer: THREE.WebGLRenderer;\nlet controls: TrackballControls;\n\n// Can we handle routes differently somehow? ~bas\nconst windowLocationHref: string = window.location.href;\nconst windowFileLocationName: string = windowLocationHref.substring(windowLocationHref.lastIndexOf('/'));\n\nswitch (windowFileLocationName) {\n    case '/':\n        const lindenmayerSettingsForm: LindenmayerFormular = LindenmayerFormular.getInstance();\n        const newTurtle: Turtle3D = lindenmayerSettingsForm.generateLSystemImage();\n\n        if (scene !== undefined) {\n            repaint(newTurtle);\n        } else {\n            initTestingScene(newTurtle, lindenmayerSettingsForm);\n            animate();\n        }\n        break;\n    case '/ar.html':\n        initArTestingScene();\n        animate();\n\n        break;\n    default:\n        console.error('Route not found');\n}\n\nfunction hookUpGenerateButtonEventListener(lindenmayerSettingsForm: LindenmayerFormular) {\n    const btnGenerate: HTMLInputElement = document.querySelector('#btnGenerate');\n    btnGenerate.addEventListener('click', (e) => {\n        e.preventDefault();\n        const newTurtle: Turtle3D = lindenmayerSettingsForm.generateLSystemImage();\n\n        if (scene !== undefined) {\n            repaint(newTurtle);\n        } else {\n            initTestingScene(newTurtle, lindenmayerSettingsForm);\n            animate();\n        }\n    });\n}\n\nfunction initTestingScene(turtle: Turtle3D, lindenmayerSettingsForm: LindenmayerFormular) {\n    renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    document.body.appendChild(renderer.domElement);\n\n    camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 1, 10000);\n\n    controls = new TrackballControls(camera, renderer.domElement);\n    controls.rotateSpeed = 2;\n    camera.position.set(0, 0, 15);\n    controls.update();\n\n    scene = new THREE.Scene();\n\n    const mesh: THREE.Mesh = turtle.addGeometryToScene(scene);\n\n    renderer.render(scene, camera);\n\n    const directionalLight: THREE.DirectionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.target = mesh;\n    scene.add(directionalLight);\n\n    // const axesHelper = new THREE.AxesHelper(5);\n    // scene.add(axesHelper);\n\n    window.addEventListener('resize', onWindowResize, false);\n\n    hookUpGenerateButtonEventListener(lindenmayerSettingsForm);\n}\n\nfunction initArTestingScene() {\n    camera = new THREE.PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.01, 20);\n\n    scene = new THREE.Scene();\n\n    renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    renderer.setPixelRatio(window.devicePixelRatio);\n    renderer.xr.enabled = true;\n    document.body.appendChild(renderer.domElement);\n\n    document.body.appendChild(ARButton.createButton(renderer));\n\n    const light = new THREE.HemisphereLight(0xffffff, 0xbbbbff, 1);\n    light.position.set(0.5, 1, 0.25);\n    scene.add(light);\n\n    // TODO: replace this geometrx with a generated tree somehow\n    const geometry = new THREE.CylinderGeometry(0, 0.05, 0.2, 32).rotateX(Math.PI / 2);\n\n    function onSelect() {\n        const material = new THREE.MeshPhongMaterial({ color: 0xffffff * Math.random() });\n        const mesh = new THREE.Mesh(geometry, material);\n        mesh.position.set(0, 0, -0.3).applyMatrix4(controller.matrixWorld);\n        mesh.quaternion.setFromRotationMatrix(controller.matrixWorld);\n        scene.add(mesh);\n    }\n\n    const controller = renderer.xr.getController(0);\n    controller.addEventListener('select', onSelect);\n    scene.add(controller);\n\n    renderer.render(scene, camera);\n\n    window.addEventListener('resize', onWindowResize, false);\n}\n\nfunction repaint(turtle: Turtle3D) {\n    for (let i = scene.children.length - 1; i >= 0; i--) {\n        const obj = scene.children[i];\n        scene.remove(obj);\n    }\n    turtle.addGeometryToScene(scene);\n}\n\nfunction animate() {\n    renderer.setAnimationLoop(render);\n}\n\nfunction render() {\n    renderer.render(scene, camera);\n    controls?.update(); // Only update controls if present\n\n    //Performance Stats update\n    PerformanceStats.instance?.update(); // Only update stats if present\n}\n\nfunction onWindowResize() {\n    camera.aspect = window.innerWidth / window.innerHeight;\n    camera.updateProjectionMatrix();\n\n    renderer.setSize(window.innerWidth, window.innerHeight);\n}\n"],
  "mappings": "AAAA;AAEA;AAEA;AACA;AACA;AAEO,WAAI;AACX;AACA;AACA;AAGA,2BAAmC,OAAO,SAAS;AACnD,+BAAuC,mBAAmB,UAAU,mBAAmB,YAAY;AAEnG,QAAQ;AAAA,OACC;AACD,oCAAqD,oBAAoB;AACzE,sBAA4B,wBAAwB;AAEpD,QAAI,UAAU;AACV,cAAQ;AAAA;AAER,uBAAiB,WAAW;AAC5B;AAAA;AAEJ;AAAA,OACC;AACD;AACA;AAEA;AAAA;AAEA,YAAQ,MAAM;AAAA;AAGtB;AACI,sBAAsC,SAAS,cAAc;AAC7D,cAAY,iBAAiB,SAAS;AAClC,MAAE;AACF,sBAA4B,wBAAwB;AAEpD,QAAI,UAAU;AACV,cAAQ;AAAA;AAER,uBAAiB,WAAW;AAC5B;AAAA;AAAA;AAAA;AAKZ;AACI,aAAW,IAAI,MAAM;AACrB,WAAS,QAAQ,OAAO,YAAY,OAAO;AAC3C,WAAS,cAAc,OAAO;AAC9B,WAAS,KAAK,YAAY,SAAS;AAEnC,WAAS,IAAI,MAAM,kBAAkB,IAAI,OAAO,aAAa,OAAO,aAAa,GAAG;AAEpF,aAAW,IAAI,kBAAkB,QAAQ,SAAS;AAClD,WAAS,cAAc;AACvB,SAAO,SAAS,IAAI,GAAG,GAAG;AAC1B,WAAS;AAET,UAAQ,IAAI,MAAM;AAElB,eAAyB,OAAO,mBAAmB;AAEnD,WAAS,OAAO,OAAO;AAEvB,2BAAiD,IAAI,MAAM,iBAAiB,UAAU;AACtF,mBAAiB,SAAS;AAC1B,QAAM,IAAI;AAKV,SAAO,iBAAiB,UAAU,gBAAgB;AAElD,oCAAkC;AAAA;AAGtC;AACI,WAAS,IAAI,MAAM,kBAAkB,IAAI,OAAO,aAAa,OAAO,aAAa,MAAM;AAEvF,UAAQ,IAAI,MAAM;AAElB,aAAW,IAAI,MAAM;AACrB,WAAS,QAAQ,OAAO,YAAY,OAAO;AAC3C,WAAS,cAAc,OAAO;AAC9B,WAAS,GAAG,UAAU;AACtB,WAAS,KAAK,YAAY,SAAS;AAEnC,WAAS,KAAK,YAAY,SAAS,aAAa;AAEhD,gBAAc,IAAI,MAAM,gBAAgB,UAAU,UAAU;AAC5D,QAAM,SAAS,IAAI,KAAK,GAAG;AAC3B,QAAM,IAAI;AAGV,mBAAiB,IAAI,MAAM,iBAAiB,GAAG,MAAM,KAAK,IAAI,QAAQ,KAAK,KAAK;AAEhF;AACI,qBAAiB,IAAI,MAAM,kBAAkB,CAAE,OAAO,WAAW,KAAK;AACtE,iBAAa,IAAI,MAAM,KAAK,UAAU;AACtC,SAAK,SAAS,IAAI,GAAG,GAAG,MAAM,aAAa,WAAW;AACtD,SAAK,WAAW,sBAAsB,WAAW;AACjD,UAAM,IAAI;AAAA;AAGd,qBAAmB,SAAS,GAAG,cAAc;AAC7C,aAAW,iBAAiB,UAAU;AACtC,QAAM,IAAI;AAEV,WAAS,OAAO,OAAO;AAEvB,SAAO,iBAAiB,UAAU,gBAAgB;AAAA;AAGtD;AACI,eAAa,MAAM,SAAS,SAAS,GAAG,KAAK,GAAG;AAC5C,gBAAY,MAAM,SAAS;AAC3B,UAAM,OAAO;AAAA;AAEjB,SAAO,mBAAmB;AAAA;AAG9B;AACI,WAAS,iBAAiB;AAAA;AAG9B;AACI,WAAS,OAAO,OAAO;AACvB,YAAU;AAGV,mBAAiB,UAAU;AAAA;AAG/B;AACI,SAAO,SAAS,OAAO,aAAa,OAAO;AAC3C,SAAO;AAEP,WAAS,QAAQ,OAAO,YAAY,OAAO;AAAA;",
  "names": []
}
