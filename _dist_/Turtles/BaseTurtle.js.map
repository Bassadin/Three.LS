{
  "version": 3,
  "sources": ["/home/runner/work/Three.LS/Three.LS/src/Turtles/BaseTurtle.ts"],
  "sourcesContent": ["import * as THREE from 'three';\nimport { Quaternion, Vector3 } from 'three';\n\nexport abstract class BaseTurtle {\n    protected instructionString: string;\n    protected stepLength: number;\n    protected rotationStepSize: number; //In radians\n\n    //Rotation\n    protected currentRotation: Quaternion = new Quaternion();\n    private rotationSaveStateArray: Quaternion[] = [];\n\n    //Position\n    protected currentPosition: Vector3 = new Vector3(0, -5, 0);\n    private positionSaveStateArray: Vector3[] = [];\n\n    //Color\n    newColors = [0.7, 0.3, 0.1];\n    protected colorIndex: number = 0;\n    private colorSaveStateArray: number[] = [];\n\n    constructor(instructionString: string, stepLength: number, rotationStepSize: number) {\n        this.instructionString = instructionString;\n        this.stepLength = stepLength;\n        this.rotationStepSize = rotationStepSize;\n    }\n\n    abstract addGeometryToScene(_scene: THREE.Scene): void;\n\n    saveState(): void {\n        this.positionSaveStateArray.push(this.currentPosition.clone());\n        this.rotationSaveStateArray.push(this.currentRotation.clone());\n        this.colorSaveStateArray.push(this.colorIndex);\n        // console.log(\"save\", this.colorIndex);\n    }\n\n    loadState(): void {\n        if (this.positionSaveStateArray.length == 0) {\n            throw new Error('Cannot load state before it has been written at least once');\n        }\n        this.currentPosition = this.positionSaveStateArray.pop();\n        this.currentRotation = this.rotationSaveStateArray.pop();\n        this.colorIndex = this.colorSaveStateArray.pop();\n        // console.log(\"load\", this.colorIndex);\n    }\n}\n"],
  "mappings": "AACA;AAEO,wBAA0B;AAAA,EAkB7B,YAAY,mBAA2B,YAAoB,kBAA0B;AAZ3E,2BAA8B,IAAI;AACpC,kCAAuC;AAGrC,2BAA2B,IAAI,QAAQ,GAAG,IAAI;AAChD,kCAAoC;AAG5C,qBAAY,CAAC,KAAK,KAAK;AACb,sBAAqB;AACvB,+BAAgC;AAGpC,SAAK,oBAAoB;AACzB,SAAK,aAAa;AAClB,SAAK,mBAAmB;AAAA;AAAA,EAK5B,YAAkB;AACd,SAAK,uBAAuB,KAAK,KAAK,gBAAgB;AACtD,SAAK,uBAAuB,KAAK,KAAK,gBAAgB;AACtD,SAAK,oBAAoB,KAAK,KAAK;AAAA;AAAA,EAIvC,YAAkB;AACd,QAAI,KAAK,uBAAuB,UAAU,GAAG;AACzC,YAAM,IAAI,MAAM;AAAA;AAEpB,SAAK,kBAAkB,KAAK,uBAAuB;AACnD,SAAK,kBAAkB,KAAK,uBAAuB;AACnD,SAAK,aAAa,KAAK,oBAAoB;AAAA;AAAA;",
  "names": []
}
